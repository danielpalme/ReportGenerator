<?xml version="1.0" encoding="utf-8"?>
<CoverageReport scope="Test.TestClass">
  <Summary>
    <Class>Test.TestClass</Class>
    <Assembly>Sample</Assembly>
    <Files>
      <File>C:\temp\TestClass.cs</File>
    </Files>
    <Coveredlines>24</Coveredlines>
    <Uncoveredlines>9</Uncoveredlines>
    <Coverablelines>33</Coverablelines>
    <Totallines>38</Totallines>
    <Linecoverage>72.7</Linecoverage>
    <Coveredbranches>2</Coveredbranches>
    <Totalbranches>4</Totalbranches>
    <Branchcoverage>50</Branchcoverage>
    <Coveredmethods>4</Coveredmethods>
    <Fullcoveredmethods>3</Fullcoveredmethods>
    <Totalmethods>5</Totalmethods>
    <Methodcoverage>80</Methodcoverage>
    <Fullmethodcoverage>60</Fullmethodcoverage>
  </Summary>
  <Metrics>
    <Element name="SampleFunction">
      <Cyclomaticcomplexity>4</Cyclomaticcomplexity>
      <NPathcomplexity>4</NPathcomplexity>
      <Sequencecoverage>80</Sequencecoverage>
      <Branchcoverage>50</Branchcoverage>
    </Element>
    <Element name="ParentMethod">
      <Cyclomaticcomplexity>1</Cyclomaticcomplexity>
      <NPathcomplexity>1</NPathcomplexity>
      <Sequencecoverage>100</Sequencecoverage>
      <Branchcoverage>100</Branchcoverage>
    </Element>
    <Element name="NestedLocalFunctionSystemString">
      <Cyclomaticcomplexity>1</Cyclomaticcomplexity>
      <NPathcomplexity>1</NPathcomplexity>
      <Sequencecoverage>100</Sequencecoverage>
      <Branchcoverage>100</Branchcoverage>
    </Element>
    <Element name="MethodWithLambda">
      <Cyclomaticcomplexity>1</Cyclomaticcomplexity>
      <NPathcomplexity>1</NPathcomplexity>
      <Sequencecoverage>100</Sequencecoverage>
      <Branchcoverage>100</Branchcoverage>
    </Element>
    <Element name="SampleFunction">
      <Cyclomaticcomplexity>1</Cyclomaticcomplexity>
      <NPathcomplexity>1</NPathcomplexity>
      <Sequencecoverage>0</Sequencecoverage>
      <Branchcoverage>100</Branchcoverage>
    </Element>
  </Metrics>
  <Files>
    <File name="C:\temp\TestClass.cs">
      <LineAnalysis line="1" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System;" />
      <LineAnalysis line="2" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="3" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="namespace Test" />
      <LineAnalysis line="4" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="{" />
      <LineAnalysis line="5" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    class TestClass" />
      <LineAnalysis line="6" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    {" />
      <LineAnalysis line="7" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public void SampleFunction()" />
      <LineAnalysis line="8" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        {" />
      <LineAnalysis line="9" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            string test = string.Format(" />
      <LineAnalysis line="10" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                &quot;{0} {1}&quot;," />
      <LineAnalysis line="11" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                 &quot;Hello&quot;," />
      <LineAnalysis line="12" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                 &quot;World&quot;);" />
      <LineAnalysis line="13" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="14" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            Console.WriteLine(test);" />
      <LineAnalysis line="15" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            int i = 10;" />
      <LineAnalysis line="16" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="17" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            if (i &gt; 0 || i &gt; 1)" />
      <LineAnalysis line="18" visits="2" coverage="PartiallyCovered" coveredbranches="2" totalbranches="4" content="            {" />
      <LineAnalysis line="19" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                Console.WriteLine(i + &quot; is greater that 0&quot;);" />
      <LineAnalysis line="20" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            }" />
      <LineAnalysis line="21" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            else" />
      <LineAnalysis line="22" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            {" />
      <LineAnalysis line="23" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                Console.WriteLine(i + &quot; is not greater that 0&quot;);" />
      <LineAnalysis line="24" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            }" />
      <LineAnalysis line="25" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="        }" />
      <LineAnalysis line="26" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="27" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public class NestedClass" />
      <LineAnalysis line="28" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        {" />
      <LineAnalysis line="29" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            public void SampleFunction()" />
      <LineAnalysis line="30" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            {" />
      <LineAnalysis line="31" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="                Console.WriteLine(" />
      <LineAnalysis line="32" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                    &quot;{0} {1}&quot;," />
      <LineAnalysis line="33" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="                     &quot;Hello&quot;," />
      <LineAnalysis line="34" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="                     &quot;World&quot;);" />
      <LineAnalysis line="35" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            }" />
      <LineAnalysis line="36" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="        }" />
      <LineAnalysis line="37" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="    }" />
      <LineAnalysis line="38" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="}" />
    </File>
  </Files>
</CoverageReport>