//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Palmmedia.ReportGenerator.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Palmmedia.ReportGenerator.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added coverage information of {0}/{1} auto properties.
        /// </summary>
        internal static string AddedCoverageInformationOfProperties {
            get {
                return ResourceManager.GetString("AddedCoverageInformationOfProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added coverage information of {0}/{1} auto properties to module &apos;{2}&apos;.
        /// </summary>
        internal static string AddedCoverageInformationOfPropertiesOpenCover {
            get {
                return ResourceManager.GetString("AddedCoverageInformationOfPropertiesOpenCover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added coverage information of {0}/{1} unexecuted methods.
        /// </summary>
        internal static string AddedCoverageInformationUnexecutedMethods {
            get {
                return ResourceManager.GetString("AddedCoverageInformationUnexecutedMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing {0} classes.
        /// </summary>
        internal static string AnalyzingClasses {
            get {
                return ResourceManager.GetString("AnalyzingClasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments.
        /// </summary>
        internal static string Arguments {
            get {
                return ResourceManager.GetString("Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating history report.
        /// </summary>
        internal static string CreatingHistoryReport {
            get {
                return ResourceManager.GetString("CreatingHistoryReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating report {0}/{1} (Assembly: {2}, Class: {3}).
        /// </summary>
        internal static string CreatingReport {
            get {
                return ResourceManager.GetString("CreatingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating summary.
        /// </summary>
        internal static string CreatingSummary {
            get {
                return ResourceManager.GetString("CreatingSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSS &apos;{0}&apos; could not be saved: {1}.
        /// </summary>
        internal static string CssNotSaved {
            get {
                return ResourceManager.GetString("CssNotSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support for Testwell CTC++ input files is only available for sponsors. Get your license here: https://reportgenerator.io/pro.
        /// </summary>
        internal static string CtcReportProVersion {
            get {
                return ResourceManager.GetString("CtcReportProVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Assembly: {0}.
        /// </summary>
        internal static string CurrentAssembly {
            get {
                return ResourceManager.GetString("CurrentAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default report builder for report type &apos;{0}&apos; was replaced..
        /// </summary>
        internal static string DefaultReportBuilderReplaced {
            get {
                return ResourceManager.GetString("DefaultReportBuilderReplaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate command line parameter &apos;{0}&apos;. Using value &apos;{1}&apos;.
        /// </summary>
        internal static string DuplicateCommandLineParameter {
            get {
                return ResourceManager.GetString("DuplicateCommandLineParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It seems that the report file &apos;{0}&apos; is a binary format generated by a Visual Studio code coverage tool. Please convert to XML format with &apos;CodeCoverage.exe&apos; (See: https://github.com/danielpalme/ReportGenerator/wiki/Visual-Studio-Coverage-Tools#codecoverageexe).
        /// </summary>
        internal static string ErrorCoverageFormat {
            get {
                return ResourceManager.GetString("ErrorCoverageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to generate report &apos;{0}&apos;. No historic coverage to compare..
        /// </summary>
        internal static string ErrorDeltaReport {
            get {
                return ResourceManager.GetString("ErrorDeltaReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during reading license: {0}.
        /// </summary>
        internal static string ErrorDuringDeserializingLicense {
            get {
                return ResourceManager.GetString("ErrorDuringDeserializingLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during reading file &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string ErrorDuringReadingFile {
            get {
                return ResourceManager.GetString("ErrorDuringReadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during reading historic report &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string ErrorDuringReadingHistoricReport {
            get {
                return ResourceManager.GetString("ErrorDuringReadingHistoricReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during reading historic reports: {0}.
        /// </summary>
        internal static string ErrorDuringReadingHistoricReports {
            get {
                return ResourceManager.GetString("ErrorDuringReadingHistoricReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during reading report &apos;{0}&apos; (Size: {1}): {2}.
        /// </summary>
        internal static string ErrorDuringReadingReport {
            get {
                return ResourceManager.GetString("ErrorDuringReadingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during rendering report for class &apos;{0}&apos; (Report type: &apos;{1}&apos;): {2}.
        /// </summary>
        internal static string ErrorDuringRenderingClassReport {
            get {
                return ResourceManager.GetString("ErrorDuringRenderingClassReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during rendering summary report (Report type: &apos;{0}&apos;): {1}.
        /// </summary>
        internal static string ErrorDuringRenderingSummaryReport {
            get {
                return ResourceManager.GetString("ErrorDuringRenderingSummaryReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during saving historic report &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string ErrorDuringSavingHistoricReport {
            get {
                return ResourceManager.GetString("ErrorDuringSavingHistoricReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font &apos;Arial&apos; is not available. Therefore only SVG badges can be generated. PNG files are omitted..
        /// </summary>
        internal static string ErrorFontNotFound {
            get {
                return ResourceManager.GetString("ErrorFontNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cobertura report is not well formed. The &lt;packages&gt; element should contain &lt;package&gt; elements and not &lt;class&gt; elements..
        /// </summary>
        internal static string ErrorInvalidCoberturaReport {
            get {
                return ResourceManager.GetString("ErrorInvalidCoberturaReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dotCover report does not contain line coverage data. Use the dotCover command line parameter &apos;/ReportType=DetailedXML&apos; to capture line coverage..
        /// </summary>
        internal static string ErrorInvalidDotCoverReport {
            get {
                return ResourceManager.GetString("ErrorInvalidDotCoverReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The branch coverage of {0}% is below the minimum threshold of {1}%..
        /// </summary>
        internal static string ErrorLowBranchCoverage {
            get {
                return ResourceManager.GetString("ErrorLowBranchCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full method coverage of {0}% is below the minimum threshold of {1}%..
        /// </summary>
        internal static string ErrorLowFullMethodCoverage {
            get {
                return ResourceManager.GetString("ErrorLowFullMethodCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The line coverage of {0}% is below the minimum threshold of {1}%..
        /// </summary>
        internal static string ErrorLowLineCoverage {
            get {
                return ResourceManager.GetString("ErrorLowLineCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method coverage of {0}% is below the minimum threshold of {1}%..
        /// </summary>
        internal static string ErrorLowMethodCoverage {
            get {
                return ResourceManager.GetString("ErrorLowMethodCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;uid&apos; of tracked method &apos;{0}&apos; is not unique. Ignoring tracked methods..
        /// </summary>
        internal static string ErrorNotUniqueTrackedMethodUid {
            get {
                return ResourceManager.GetString("ErrorNotUniqueTrackedMethodUid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PartCover is no longer supported. If you want to generate coverage reports based on PartCover, please use version 3.x of ReportGenerator..
        /// </summary>
        internal static string ErrorPartCover {
            get {
                return ResourceManager.GetString("ErrorPartCover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The risk hotspot value {0} for assembly &apos;{1}&apos; class &apos;{2}&apos; method &apos;{3}&apos; metric &apos;{4}&apos; is greater than the maximum threshold of {5}..
        /// </summary>
        internal static string ErrorRiskHotspot {
            get {
                return ResourceManager.GetString("ErrorRiskHotspot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable.
        /// </summary>
        internal static string Executable {
            get {
                return ResourceManager.GetString("Executable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The report file &apos;{0}&apos; is invalid. File does not exist (Full path: &apos;{1}&apos;)..
        /// </summary>
        internal static string FailedReportFile {
            get {
                return ResourceManager.GetString("FailedReportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The report file pattern &apos;{0}&apos; found no matching files..
        /// </summary>
        internal static string FailedReportFilePattern {
            get {
                return ResourceManager.GetString("FailedReportFilePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to instantiate plugin class &apos;{0}&apos;..
        /// </summary>
        internal static string FailedToInstantiatePlugin {
            get {
                return ResourceManager.GetString("FailedToInstantiatePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load plugins from &apos;{0}&apos;. Make sure plugin has a strong name..
        /// </summary>
        internal static string FailedToLoadPlugins {
            get {
                return ResourceManager.GetString("FailedToLoadPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist (any more)..
        /// </summary>
        internal static string FileDoesNotExist {
            get {
                return ResourceManager.GetString("FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load file &apos;{0}&apos;. Please unblock all files in installation directory. See https://github.com/danielpalme/ReportGenerator/wiki/FAQ#i-get-a-fileloadexception-when-executing-reportgenerator-how-can-i-fix-this for details..
        /// </summary>
        internal static string FileLoadError {
            get {
                return ResourceManager.GetString("FileLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load file &apos;{0}&apos;. Errors:
        ///{1}.
        /// </summary>
        internal static string FileReflectionLoadError {
            get {
                return ResourceManager.GetString("FileReflectionLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished loading report &apos;{0}&apos; {1}/{2} in memory in {3:f1} seconds.
        /// </summary>
        internal static string FinishedLoadingReport {
            get {
                return ResourceManager.GetString("FinishedLoadingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished merging result {0}.
        /// </summary>
        internal static string FinishedMergingResult {
            get {
                return ResourceManager.GetString("FinishedMergingResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished parsing &apos;{0}&apos; {1}/{2}.
        /// </summary>
        internal static string FinishedParsingFile {
            get {
                return ResourceManager.GetString("FinishedParsingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The history directory &apos;{0}&apos; could not be created: {1}.
        /// </summary>
        internal static string HistoryDirectoryCouldNotBeCreated {
            get {
                return ResourceManager.GetString("HistoryDirectoryCouldNotBeCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexing classes in directory &apos;{0}&apos;.
        /// </summary>
        internal static string IndexingClasses {
            get {
                return ResourceManager.GetString("IndexingClasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing report builders for report types: {0}.
        /// </summary>
        internal static string InitializingReportBuilders {
            get {
                return ResourceManager.GetString("InitializingReportBuilders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initiating parser for {0}.
        /// </summary>
        internal static string InitiatingParser {
            get {
                return ResourceManager.GetString("InitiatingParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filter &apos;{0}&apos; is invalid. Filters must start with &apos;+&apos; or &apos;-&apos;..
        /// </summary>
        internal static string InvalidFilter {
            get {
                return ResourceManager.GetString("InvalidFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is not valid or has expired.
        /// </summary>
        internal static string InvalidLicense {
            get {
                return ResourceManager.GetString("InvalidLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading report &apos;{0}&apos; {1}/{2} in memory.
        /// </summary>
        internal static string LoadingReport {
            get {
                return ResourceManager.GetString("LoadingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple errors.
        /// </summary>
        internal static string MultipleErrors {
            get {
                return ResourceManager.GetString("MultipleErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No assemblies have been covered..
        /// </summary>
        internal static string NoAssembliesHaveBeenCovered {
            get {
                return ResourceManager.GetString("NoAssembliesHaveBeenCovered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No report files specified..
        /// </summary>
        internal static string NoReportFiles {
            get {
                return ResourceManager.GetString("NoReportFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source directories supplied for &apos;{0}&apos; coverage file.
        /// </summary>
        internal static string NoSourceDirectories {
            get {
                return ResourceManager.GetString("NoSourceDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No target directory specified..
        /// </summary>
        internal static string NoTargetDirectory {
            get {
                return ResourceManager.GetString("NoTargetDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The plugin &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string NotExistingPlugin {
            get {
                return ResourceManager.GetString("NotExistingPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The report file &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string NotExistingReportFile {
            get {
                return ResourceManager.GetString("NotExistingReportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenCover output format is only available for sponsors. Get your license here: https://reportgenerator.io/pro.
        /// </summary>
        internal static string OpenCoverProVersion {
            get {
                return ResourceManager.GetString("OpenCoverProVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing historic file &apos;{0}&apos;.
        /// </summary>
        internal static string ParseHistoricFile {
            get {
                return ResourceManager.GetString("ParseHistoricFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing of {0} files completed.
        /// </summary>
        internal static string ParsingCompleted {
            get {
                return ResourceManager.GetString("ParsingCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins are not supported in a .NET Standard environment. .
        /// </summary>
        internal static string PluginsNotSupported {
            get {
                return ResourceManager.GetString("PluginsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preprocessing report.
        /// </summary>
        internal static string PreprocessingReport {
            get {
                return ResourceManager.GetString("PreprocessingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raw mode is only available for sponsors. Get your license here: https://reportgenerator.io/pro.
        /// </summary>
        internal static string RawModeProVersion {
            get {
                return ResourceManager.GetString("RawModeProVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading historic reports.
        /// </summary>
        internal static string ReadingHistoricReports {
            get {
                return ResourceManager.GetString("ReadingHistoricReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report generation took {0:f1} seconds.
        /// </summary>
        internal static string ReportGenerationTook {
            get {
                return ResourceManager.GetString("ReportGenerationTook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coverage report parsing took {0:f1} seconds.
        /// </summary>
        internal static string ReportParsingTook {
            get {
                return ResourceManager.GetString("ReportParsingTook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Several custom history storages exist. Please ensure that only one custom storage exists..
        /// </summary>
        internal static string SeveralCustomHistoryStorages {
            get {
                return ResourceManager.GetString("SeveralCustomHistoryStorages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Several custom report builders for report type &apos;{0}&apos; exist. This may cause problems if they try to write to the same files/directory..
        /// </summary>
        internal static string SeveralCustomReportBuildersWithSameReportType {
            get {
                return ResourceManager.GetString("SeveralCustomReportBuildersWithSameReportType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source code directory &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string SourceDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("SourceDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting merging result {0}.
        /// </summary>
        internal static string StartingMergingResult {
            get {
                return ResourceManager.GetString("StartingMergingResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target directory &apos;{0}&apos; could not be created: {1}.
        /// </summary>
        internal static string TargetDirectoryCouldNotBeCreated {
            get {
                return ResourceManager.GetString("TargetDirectoryCouldNotBeCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command line parameter &apos;{0}&apos;.
        /// </summary>
        internal static string UnknownCommandLineParameter {
            get {
                return ResourceManager.GetString("UnknownCommandLineParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown report type &apos;{0}&apos;..
        /// </summary>
        internal static string UnknownReportType {
            get {
                return ResourceManager.GetString("UnknownReportType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown verbosity level..
        /// </summary>
        internal static string UnknownVerbosityLevel {
            get {
                return ResourceManager.GetString("UnknownVerbosityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working directory.
        /// </summary>
        internal static string WorkingDirectory {
            get {
                return ResourceManager.GetString("WorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing report file &apos;{0}&apos;.
        /// </summary>
        internal static string WritingReportFile {
            get {
                return ResourceManager.GetString("WritingReportFile", resourceCulture);
            }
        }
    }
}
