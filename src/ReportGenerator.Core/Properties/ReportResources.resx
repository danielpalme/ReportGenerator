<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Assemblies" xml:space="preserve">
    <value>Assemblies</value>
  </data>
  <data name="Assemblies2" xml:space="preserve">
    <value>Assemblies:</value>
  </data>
  <data name="Assembly" xml:space="preserve">
    <value>Assembly:</value>
  </data>
  <data name="BlocksCovered" xml:space="preserve">
    <value>Blocks covered</value>
  </data>
  <data name="BlocksNotCovered" xml:space="preserve">
    <value>Blocks not covered</value>
  </data>
  <data name="BranchCoverage" xml:space="preserve">
    <value>Branch coverage</value>
  </data>
  <data name="BranchCoverage2" xml:space="preserve">
    <value>Branch coverage:</value>
  </data>
  <data name="Branches" xml:space="preserve">
    <value>Branches</value>
  </data>
  <data name="ByAssembly" xml:space="preserve">
    <value>By assembly</value>
  </data>
  <data name="ByNamespace" xml:space="preserve">
    <value>By namespace, Level:</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Class:</value>
  </data>
  <data name="Classes" xml:space="preserve">
    <value>Classes:</value>
  </data>
  <data name="CodeCoverage" xml:space="preserve">
    <value>Code coverage</value>
  </data>
  <data name="CollapseAll" xml:space="preserve">
    <value>Collapse all</value>
  </data>
  <data name="Coverable" xml:space="preserve">
    <value>Coverable</value>
  </data>
  <data name="CoverableLines" xml:space="preserve">
    <value>Coverable lines:</value>
  </data>
  <data name="Coverage" xml:space="preserve">
    <value>Line coverage</value>
  </data>
  <data name="Coverage2" xml:space="preserve">
    <value>Line coverage:</value>
  </data>
  <data name="Coverage3" xml:space="preserve">
    <value>Coverage</value>
  </data>
  <data name="CoverageReport" xml:space="preserve">
    <value>Coverage Report</value>
  </data>
  <data name="Covered" xml:space="preserve">
    <value>Covered</value>
  </data>
  <data name="CoveredLines" xml:space="preserve">
    <value>Covered lines:</value>
  </data>
  <data name="CrapScore" xml:space="preserve">
    <value>Crap Score</value>
  </data>
  <data name="CyclomaticComplexity" xml:space="preserve">
    <value>Cyclomatic complexity</value>
  </data>
  <data name="ExpandAll" xml:space="preserve">
    <value>Expand all</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>File(s)</value>
  </data>
  <data name="Files2" xml:space="preserve">
    <value>Files:</value>
  </data>
  <data name="Files3" xml:space="preserve">
    <value>File(s):</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter:</value>
  </data>
  <data name="GeneratedBy" xml:space="preserve">
    <value>Generated by:</value>
  </data>
  <data name="GeneratedOn" xml:space="preserve">
    <value>Generated on:</value>
  </data>
  <data name="Grouping" xml:space="preserve">
    <value>Grouping:</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>Coverage history</value>
  </data>
  <data name="Line" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="Method" xml:space="preserve">
    <value>Method</value>
  </data>
  <data name="Metrics" xml:space="preserve">
    <value>Metrics</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoCoveredAssemblies" xml:space="preserve">
    <value>No assemblies have been covered.</value>
  </data>
  <data name="NoFilesFound" xml:space="preserve">
    <value>No files found. This usually happens if a file isn't covered by a test or the class does not contain any sequence points (e.g. a class that only contains auto properties).</value>
  </data>
  <data name="NoGrouping" xml:space="preserve">
    <value>No grouping</value>
  </data>
  <data name="NPathComplexity" xml:space="preserve">
    <value>NPath complexity</value>
  </data>
  <data name="Parser" xml:space="preserve">
    <value>Parser:</value>
  </data>
  <data name="SequenceCoverage" xml:space="preserve">
    <value>Sequence coverage</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="Testmethods" xml:space="preserve">
    <value>Coverage by test methods</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalLines" xml:space="preserve">
    <value>Total lines:</value>
  </data>
  <data name="Uncovered" xml:space="preserve">
    <value>Uncovered</value>
  </data>
  <data name="UncoveredLines" xml:space="preserve">
    <value>Uncovered lines:</value>
  </data>
  <data name="MethodsProperties" xml:space="preserve">
    <value>Methods/Properties</value>
  </data>
  <data name="Tag" xml:space="preserve">
    <value>Tag:</value>
  </data>
  <data name="RiskHotspots" xml:space="preserve">
    <value>Risk Hotspots</value>
  </data>
  <data name="Assembly2" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="Class2" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>Top:</value>
  </data>
  <data name="NoRiskHotspots" xml:space="preserve">
    <value>No risk hotspots found.</value>
  </data>
  <data name="CompareHistory" xml:space="preserve">
    <value>Compare with:</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="AllChanges" xml:space="preserve">
    <value>All changes</value>
  </data>
  <data name="BranchCoverageDecreaseOnly" xml:space="preserve">
    <value>Branch coverage: Decrease only</value>
  </data>
  <data name="BranchCoverageIncreaseOnly" xml:space="preserve">
    <value>Branch coverage: Increase only</value>
  </data>
  <data name="LineCoverageDecreaseOnly" xml:space="preserve">
    <value>Line coverage: Decrease only</value>
  </data>
  <data name="LineCoverageIncreaseOnly" xml:space="preserve">
    <value>Line coverage: Increase only</value>
  </data>
  <data name="CoveredBranches2" xml:space="preserve">
    <value>Covered branches:</value>
  </data>
  <data name="TotalBranches" xml:space="preserve">
    <value>Total branches:</value>
  </data>
  <data name="CoverageTooltip_Covered" xml:space="preserve">
    <value>Covered ({0} visits{1})</value>
  </data>
  <data name="CoverageTooltip_NotCoverable" xml:space="preserve">
    <value>Not coverable</value>
  </data>
  <data name="CoverageTooltip_NotCovered" xml:space="preserve">
    <value>Not covered ({0} visits{1})</value>
  </data>
  <data name="CoverageTooltip_PartiallyCovered" xml:space="preserve">
    <value>Partially covered ({0} visits{1})</value>
  </data>
  <data name="CoveredBranches" xml:space="preserve">
    <value>{0} of {1} branches are covered</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Sponsor" xml:space="preserve">
    <value>Sponsor</value>
  </data>
  <data name="SponsorTooltip" xml:space="preserve">
    <value>Become a sponsor</value>
  </data>
  <data name="Star" xml:space="preserve">
    <value>Star</value>
  </data>
  <data name="StarTooltip" xml:space="preserve">
    <value>Star on GitHub</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="CodeElementCoverageQuota" xml:space="preserve">
    <value>Method coverage</value>
  </data>
  <data name="CodeElementCoverageQuota2" xml:space="preserve">
    <value>Method coverage:</value>
  </data>
  <data name="CoveredCodeElements" xml:space="preserve">
    <value>Covered methods:</value>
  </data>
  <data name="TotalCodeElements" xml:space="preserve">
    <value>Total methods:</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="CodeElementCoverageDecreaseOnly" xml:space="preserve">
    <value>Method coverage: Decrease only</value>
  </data>
  <data name="CodeElementCoverageIncreaseOnly" xml:space="preserve">
    <value>Method coverage: Increase only</value>
  </data>
  <data name="Percentage" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="MethodCoverageProButton" xml:space="preserve">
    <value>Upgrade to PRO version</value>
  </data>
  <data name="MethodCoverageProVersion" xml:space="preserve">
    <value>Feature is only available for sponsors</value>
  </data>
  <data name="CoverageDate" xml:space="preserve">
    <value>Coverage date:</value>
  </data>
  <data name="DeltaSummary" xml:space="preserve">
    <value>Delta Summary</value>
  </data>
  <data name="Current" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="Delta" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Branch" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="CoverageTypes" xml:space="preserve">
    <value>Coverage types</value>
  </data>
  <data name="SelectCoverageTypesAndMetrics" xml:space="preserve">
    <value>Select coverage types &amp; metrics</value>
  </data>
  <data name="SelectCoverageTypes" xml:space="preserve">
    <value>Select coverage types</value>
  </data>
  <data name="FullCoveredCodeElements" xml:space="preserve">
    <value>Fully covered methods:</value>
  </data>
  <data name="FullCodeElementCoverageQuota2" xml:space="preserve">
    <value>Full method coverage:</value>
  </data>
  <data name="FullCodeElementCoverageQuota" xml:space="preserve">
    <value>Full method coverage</value>
  </data>
  <data name="FullCodeElementCoverageIncreaseOnly" xml:space="preserve">
    <value>Full method coverage: Increase only</value>
  </data>
  <data name="FullCodeElementCoverageDecreaseOnly" xml:space="preserve">
    <value>Full method coverage: Decrease only</value>
  </data>
  <data name="FullMethod" xml:space="preserve">
    <value>Full method</value>
  </data>
  <data name="McdcCoverage" xml:space="preserve">
    <value>MC/DC</value>
  </data>
  <data name="DecisionCoverage" xml:space="preserve">
    <value>Decision</value>
  </data>
  <data name="StatementCoverage" xml:space="preserve">
    <value>Statement</value>
  </data>
  <data name="TrueFalseCombinations" xml:space="preserve">
    <value>True/False combinations</value>
  </data>
</root>