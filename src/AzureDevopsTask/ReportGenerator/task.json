{
    "id": "be803a55-9253-4895-a525-be570d86f161",
    "name": "reportgenerator",
    "friendlyName": "ReportGenerator",
    "description": "ReportGenerator converts coverage reports generated by coverlet, OpenCover, dotCover, Visual Studio, NCover, Cobertura, JaCoCo, Clover, gcov, or lcov into human readable reports in various formats.",
    "helpMarkDown": "[More Information](https://github.com/danielpalme/ReportGenerator)",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Palmmedia",
    "version": {
        "Major": 5,
        "Minor": 1,
        "Patch": 23
    },
    "instanceNameFormat": "ReportGenerator",
    "groups": [
    ],
    "inputs": [
        {
            "name": "reports",
            "type": "string",
            "label": "Reports",
            "defaultValue": "coverage.xml",
            "required": true,
            "helpMarkDown": "The coverage reports that should be parsed (separated by semicolon). Globbing is supported."
        },
        {
            "name": "targetdir",
            "type": "string",
            "label": "Target directory",
            "defaultValue": "coveragereport",
            "required": true,
            "helpMarkDown": "The directory where the generated report should be saved."
        },
        {
            "name": "reporttypes",
            "type": "string",
            "label": "Report types",
            "defaultValue": "HtmlInline_AzurePipelines;Cobertura",
            "required": false,
            "helpMarkDown": "The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, OpenCover, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary"
        },
        {
            "name": "sourcedirs",
            "type": "string",
            "label": "Source directories",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information."
        },
        {
            "name": "historydir",
            "type": "string",
            "label": "History directory",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution."
        },
        {
            "name": "plugins",
            "type": "string",
            "label": "Plugins",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optional plugin files for custom reports or custom history storage (separated by semicolon)."
        },
        {
            "name": "assemblyfilters",
            "type": "string",
            "label": "Assembly filters",
            "defaultValue": "+*",
            "required": false,
            "helpMarkDown": "Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed."
        },
        {
            "name": "classfilters",
            "type": "string",
            "label": "Class filters",
            "defaultValue": "+*",
            "required": false,
            "helpMarkDown": "Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed."
        },
        {
            "name": "filefilters",
            "type": "string",
            "label": "File filters",
            "defaultValue": "+*",
            "required": false,
            "helpMarkDown": "Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed."
        },
        {
            "name": "verbosity",
            "type": "pickList",
            "label": "Verbosity",
            "defaultValue": "Info",
            "options": {
                 "Verbose": "Verbose",
                 "Info": "Info",
                 "Warning": "Warning",
                 "Error": "Error",
                 "Off": "Off"
              },
            "required": false,
            "helpMarkDown": "The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off"
        },
        {
            "name": "title",
            "type": "string",
            "label": "Title",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optional title."
        },
        {
            "name": "tag",
            "type": "string",
            "label": "Tag",
            "defaultValue": "$(build.buildnumber)_#$(build.buildid)",
            "required": false,
            "helpMarkDown": "Optional tag or build version."
        },
        {
            "name": "license",
            "type": "string",
            "label": "License",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optional license for PRO version. Get your license here: https://reportgenerator.io/pro"
        },
        {
            "name": "customSettings",
            "type": "string",
            "label": "Custom settings",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings"
        }
    ],
    "execution": {
          "Node10": {
            "target": "reportgenerator.js",
            "argumentFormat": ""
            }
    },
    "messages": {
        "FailedMsg": "ReportGenerator failed",
        "SucceedMsg": "Successfully executed ReportGenerator."
    }
}
